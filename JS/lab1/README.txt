# Отчет по лабораторной работе №1

## Введение

В данной лабораторной работе мы познакомились с основами языка JavaScript, научились выполнять код в браузере и в локальной среде, а также разобрались с базовыми конструкциями языка.

## Выполнение работы

### Задание 1. Выполнение кода в браузере

1. **Подготовка среды**  
   - Был установлен текстовый редактор `VS Code`.
   - Установлен `Node.js` с официального сайта.
   - Открыта `DevTools` (Консоль разработчика) в браузере.

2. **Выполнение кода в консоли браузера**  
   - В консоли введена команда `console.log("Hello, world!");` — сообщение успешно появилось.
   - Вычислено выражение `2 + 3`, результат `5` отобразился в консоли.

3. **Создание первой HTML-страницы с JavaScript**  
   - Создан файл `index.html`, в который добавлен следующий код:

   ```html
   <!DOCTYPE html>
   <html lang="en">
     <head>
       <title>Привет, мир!</title>
     </head>
     <body>
       <script>
         alert("Привет, мир!");
         console.log("Hello, console!");
       </script>
     </body>
   </html>
   ```
   - При открытии файла в браузере появилось всплывающее сообщение `Привет, мир!`, а в консоли отобразилось сообщение `Hello, console!`.

4. **Подключение внешнего JavaScript-файла**  
   - Создан файл `script.js` с кодом:

   ```javascript
   alert("Этот код выполнен из внешнего файла!");
   console.log("Сообщение в консоли");
   ```
   - В `index.html` добавлена строка:
   
   ```html
   <script src="script.js"></script>
   ```
   - При загрузке страницы появилось сообщение `Этот код выполнен из внешнего файла!`, а в консоли — `Сообщение в консоли`.

### Задание 2. Работа с типами данных

1. **Объявление переменных и работа с типами данных**
   - В `script.js` добавлены переменные:

   ```javascript
   let name = "Иван";
   let birthYear = 2000;
   let isStudent = true;

   console.log(name, birthYear, isStudent);
   ```
   - В консоли вывелись значения переменных.

2. **Управление потоком выполнения (условия и циклы)**
   - В `script.js` добавлен код:

   ```javascript
   let score = prompt("Введите ваш балл:");
   if (score >= 90) {
     console.log("Отлично!");
   } else if (score >= 70) {
     console.log("Хорошо");
   } else {
     console.log("Можно лучше!");
   }

   for (let i = 1; i <= 5; i++) {
     console.log(`Итерация: ${i}`);
   }
   ```
   - Введенный балл корректно обрабатывался условием.
   - В консоли выводились сообщения `Отлично!`, `Хорошо` или `Можно лучше!`, в зависимости от введенного значения.
   - Цикл успешно выполнялся, выводя номера итераций.

## Контрольные вопросы

1. **Чем отличается `var` от `let` и `const`?**
   - `var` имеет функциональную область видимости и поддерживает повторное объявление переменных.
   - `let` имеет блочную область видимости и не допускает повторного объявления в одной области.
   - `const` также имеет блочную область видимости, но запрещает изменение значения переменной после инициализации.

2. **Что такое неявное преобразование типов в JavaScript?**
   - Это автоматическое преобразование одного типа данных в другой при выполнении операций.
   - Например: `"5" + 3` → `"53"`, а `"5" - 3` → `2`.

3. **Как работает оператор `==` в сравнении с `===`?**
   - `==` выполняет нестрогое сравнение, приводя типы к одному.
   - `===` выполняет строгое сравнение без приведения типов.
   
   ```javascript
   console.log(5 == "5");  // true (строка приводится к числу)
   console.log(5 === "5"); // false (разные типы)
   ```

## Вывод
В ходе лабораторной работы были изучены основные конструкции JavaScript, способы выполнения кода в браузере и в файлах, а также работа с переменными, условиями и циклами. Задания успешно выполнены, цели достигнуты.

